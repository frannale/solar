{"version":3,"sources":["components/Chart/Chart.module.css","components/Cards/Cards.module.css","components/List/SelectMy.jsx","components/List/Filter.jsx","components/Chart/Selects.jsx","components/Chart/Chart.jsx","components/Chart/TheChart.jsx","components/Navbar/CurrentWeather.jsx","components/Navbar/SendFileButton.jsx","components/Navbar/Navbar.jsx","components/Cards/SelfCard.jsx","components/Cards/Cards.jsx","components/List/List.jsx","components/List/Table.js","components/List/Listado.jsx","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SelectMy","props","classes","FormControl","variant","className","InputLabel","htmlFor","Select","native","value","grouped","onChange","onFiltered","label","inputProps","name","id","Filter","utils","DateFnsUtils","Grid","container","style","paddingBottom","justify","disableToolbar","format","dates","from","KeyboardButtonProps","hasta","Selects","animatedComponents","makeAnimated","closeMenuOnSelect","components","selectedOption","console","log","default","isMulti","options","Charts","styles","chart","data","labels","mediciones","map","m","fecha","hora","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","carga","descarga","usoPropio","pv","p_grid","p_inversor","pv_voltage","nubosidad","temperatura","responsive","aspectRatio","scales","xAxes","reverse","pastMonth","date","Date","setDate","getDate","convertDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","TheChart","useState","setData","dataAsked","setDataAsked","setGrouped","filterDates","setFilterDates","seleccionadosValues","setSeleccionadosValues","selectOptions","setSelectOptions","getRowID","row","undefined","FECHA","HORA","useEffect","desde","axios","get","params","dataGroupedBy","then","result","parsed_data","parsed_select_options","id_value","push","CARGA","DESCARGA","PV","NUBOSIDAD","TEMPERATURA","PV_VOLTAGE","uso_propio","USO_PROPIO","P_INVERSOR","P_GRID","createData","slice","event","target","item","Chart","selected_values","s","filter","includes","getData","CurrentWeather","currentWeather","setCurrentWeather","currentWeatherIcon","setCurrentWeatherIcon","today","getHours","info","forecast","forecastday","day","actual","hour","condition","icon","maxtemp_c","mintemp_c","temp_c","cloud","catch","Button","Avatar","src","height","width","SendFileButton","alert","useAlert","extensions","file","formData","FormData","append","post","headers","total","cargados","fallidos","show","sendFileHandler","onError","error","color","Navbar","withStyles","flexGrow","grow","buttonFontSize","fontSize","padding","AppBar","backgroundSize","mainLogo","justifyContent","background","avatar","borderRadius","root","loginButton","marginLeft","boxShadow","this","position","sm","xs","Toolbar","component","Link","to","React","Component","SelfCard","Card","md","cx","card","CardContent","Typography","gutterBottom","title","start","end","duration","decimals","Cards","setDataGroupedBy","mes","dia","disabledButtons","setDisabledButtons","onButtonClick","wich","VALOR","ButtonGroup","buttonGroup","size","aria-label","onClick","disabled","CLAVE","paddingLeft","paddingRight","highlight","palette","type","secondary","main","lighten","light","text","primary","dark","flex","paper","marginBottom","table","visuallyHidden","border","clip","overflow","top","Table","createMuiTheme","overrides","MUIDataTableSelectCell","headerCell","MUIDataTableHeadCell","fixedHeader","MUIDataTableToolbar","titleText","fontFamily","datos","el","length","parseFloat","columns","display","sort","numeric","filterType","print","selectableRows","onRowsDelete","selectToolbarPlacement","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","pagination","next","previous","rowsPerPage","displayRows","all","reset","viewColumns","titleAria","selectedRows","delete","deleteAria","Listado","App","path","positions","TOP_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.314d6c57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__2ay2D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"buttonGroup\":\"Cards_buttonGroup__oX7VE\",\"card\":\"Cards_card__eGUfZ\",\"carga\":\"Cards_carga__3jC27\",\"descarga\":\"Cards_descarga__2CMyb\",\"usoPropio\":\"Cards_usoPropio__3jd_S\",\"nubosidad\":\"Cards_nubosidad__QYZ4w\",\"pv\":\"Cards_pv__1jCN_\",\"temperatura\":\"Cards_temperatura__3Jzsq\"};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 140,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SelectMy = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Agrupado</InputLabel>\n        <Select\n          native\n          value={props.grouped}\n          onChange={props.onFiltered}\n          label=\"Agrupado\"\n          inputProps={{\n            name: 'Agrupado',\n            id: 'outlined-age-native-simple',\n          }}\n        >\n          <option value={'no'}>NO</option>\n          <option value={'dia'}>DIA</option>\n          <option value={'mes'}>MES</option>\n          <option value={'hora'}>HORA</option>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default SelectMy;","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport SelectMy from \"./SelectMy\";\n\nconst Filter = (props) => {\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container style={{paddingBottom: '20px'}}  justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline-desde\"\n          label=\"DESDE\"\n          value={props.dates.from}\n          onChange={props.onFiltered.from}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <SelectMy grouped={props.grouped} onFiltered={ props.onFiltered.grouped}/>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline-hasta\"\n          label=\"HASTA\"\n          value={props.dates.hasta}\n          onChange={props.onFiltered.hasta}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\nexport default Filter;","import React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nconst Selects = (props) => {\n\nconst handleChange = (selectedOption) => {\n  console.log(props.default);\n  \n  props.onChange(selectedOption);\n    \n}\n\nconst animatedComponents = makeAnimated();\n\n  return (\n    <Select\n      closeMenuOnSelect={false}\n      components={animatedComponents}\n      onChange={handleChange}\n      isMulti\n      value={props.default}\n      options={props.options}\n    />\n  );\n}\nexport default Selects;","import { Bar } from \"react-chartjs-2\";\nimport React from \"react\";\nimport styles from \"./Chart.module.css\";\n\n\nconst Charts = (props) => {\n  \n  function getData(){\n\n    //cambiar esto por lo del state de seleccionados\n    return {labels: props.mediciones.map(m => m.fecha != '-' ? (m.hora == '-' ? m.fecha :m.fecha +' '+ m.hora+'hs') : m.hora),\n        \n    datasets: [\n      {\n        label: 'CARGA(Kv)',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: props.mediciones.map(m => m.carga)\n      },\n      {\n        label: 'DESCARGA(Kv)',\n        backgroundColor: 'rgba(0,255,0,0.2)',\n        borderColor: 'rgba(0,255,0,0.1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,255,0,0.4)',\n        hoverBorderColor: 'rgba(0,255,0,1)',\n        data: props.mediciones.map(m => m.descarga)\n      },\n      {\n        label: 'USO PROPIO(Kv)',\n        backgroundColor: 'rgba(0,0,255,0.2)',\n        borderColor: 'rgba(0,0,255,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,0,255,0.4)',\n        hoverBorderColor: 'rgba(0,0,255,1)',\n        data: props.mediciones.map(m => m.usoPropio)\n      },\n      {\n        label: 'PV(Kv)',\n        backgroundColor: 'rgba(20,0,25,0.2)',\n        borderColor: 'rgba(20,0,25,0.2)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(20,0,25,0.2)',\n        hoverBorderColor: 'rgba(0,0,255,1)',\n        data: props.mediciones.map(m => m.pv)\n      },\n      {\n        label: 'P EXT(Kv)',\n        backgroundColor: 'rgba(0,255,132,0.2)',\n        borderColor: 'rgba(0,255,132,0.2)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(0,255,132,0.2)',\n        data: props.mediciones.map(m => m.p_grid)\n      },\n      {\n        label: 'P INV(Kv)',\n        backgroundColor: 'rgba(74,255,52,0.2)',\n        borderColor: 'rgba(74,255,52,0.2)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,255,0,0.4)',\n        hoverBorderColor: 'rgba(74,255,52,0.2)',\n        data: props.mediciones.map(m => m.p_inversor)\n      },\n      {\n        label: 'P VOLTAJE (Kv)',\n        backgroundColor: 'rgba(145,120,10,0.2)',\n        borderColor: 'rgba(145,120,10,0.2)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,0,255,0.4)',\n        hoverBorderColor: 'rgba(145,120,10,0.2)',\n        data: props.mediciones.map(m => m.pv_voltage)\n      },\n      {\n        label: 'NUBOSIDAD(%)',\n        backgroundColor: 'rgba(20,255,255,0.2)',\n        borderColor: 'rgba(20,0,25,0.2)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(20,0,25,0.2)',\n        hoverBorderColor: 'rgba(20,255,255,0.2)',\n        data: props.mediciones.map(m => m.nubosidad)\n      },\n      {\n        label: 'TEMPERATURA(Cº)',\n        backgroundColor: 'rgba(249,160,125,0.2)',\n        borderColor: 'rgba(249,160,125,0.2)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(249,160,125,0.2)',\n        hoverBorderColor: 'rgba(0,0,255,1)',\n        data: props.mediciones.map(m => m.temperatura)\n      },\n    ]}\n\n  };\n\n  return (\n        <div>         \n          <div className={styles.chart}>\n            <Bar\n              data={getData()}\n              \n              options={{\n                responsive: true,\n                aspectRatio: 2,\n                scales: {\n                  xAxes: [\n                    {\n                      reverse: true, // Esto cambia el orden de los datos, de mayor a menor\n                    },\n                  ],\n                },\n              }}\n            />\n          </div>\n        </div>\n    );\n    \n}\nexport default Charts;\n","import React,{useEffect,useState} from \"react\";\n\nimport Filter from \"../List/Filter\";\nimport  Selects  from \"./Selects.jsx\";\nimport  Chart  from \"./Chart\";\n// import Chart from \"./Filter\";\nimport {Typography } from \"@material-ui/core\";\n\nimport axios from 'axios';\n\n\nfunction createData(row) {\n    return { fecha: row.FECHA , carga : row.CARGA, descarga : row.DESCARGA, pv : row.PV, hora : row.HORA,\n             nubosidad : row.NUBOSIDAD, temperatura : row.TEMPERATURA, pv_voltage : row.PV_VOLTAGE, uso_propio : row.USO_PROPIO,\n             p_inversor : row.P_INVERSOR, p_grid : row.P_GRID\n            };\n}\n\nfunction pastMonth(){\n    var date = new Date();\n    date.setDate(date.getDate() - 60);\n    return date;\n}\n\nfunction convertDate(date){\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = date.getFullYear();\n\n    date = dd + '/' + mm + '/' + yyyy;\n    return date;\n}\n\nconst TheChart = (props) => {\n\n\tconst [data, setData] = useState([]);\n    const [dataAsked, setDataAsked] = useState(false);\n    const [grouped, setGrouped] = useState('dia');\n    const [filterDates, setFilterDates] = useState({ from: pastMonth()   ,hasta : new Date()});\n    const [seleccionadosValues, setSeleccionadosValues] = useState([]);\n    const [selectOptions, setSelectOptions] = useState([]);\n\n    const onFilteredHanlderDesde = (date) => {\n        setFilterDates({...filterDates,['from']: date });\n        setDataAsked(false);\n    };\n\n    const onFilteredHanlderHasta = (date) => {\n        \n        setFilterDates({...filterDates,['hasta']: date });\n        setDataAsked(false);\n    }\n\n    const onFilteredGrouped = (event) => {\n        setGrouped(event.target.value);   \n        setDataAsked(false);\n    }\n\n    const onSelectChange = (item) => {\n        setSeleccionadosValues(item);\n      };\n\n    const getRowID = (row) => {\n        if(row.FECHA == undefined && row.HORA == undefined)\n            return  row.fecha != '-' ? (row.hora == '-' ? row.fecha :row.fecha +' '+ row.hora+'hs') : row.hora;\n        return  row.FECHA != '-' ? (row.HORA == '-' ? row.FECHA :row.FECHA +' '+ row.HORA+'hs') : row.HORA;\n      };\n\n    const getData = () => {\n        \n        \n        let selected_values = seleccionadosValues != null ? seleccionadosValues.map(s => s.value) : [];            \n        \n        return  data.filter(m => selected_values.includes(getRowID(m)) );\n        \n      };\n\n    useEffect(() => {\n\t\tif( !dataAsked){\n            \n            let desde = convertDate(filterDates.from);\n            let hasta = convertDate(filterDates.hasta);\n            \n\t\t\taxios.get( 'http://localhost:5000/mediciones', {\n\t\t\t\tparams: {\n                    dataGroupedBy: grouped,\n                    desde : desde,\n                    hasta : hasta,\n                }\n            })\n\t\t\t.then(function(result){\n                let parsed_data =[]\n                let parsed_select_options =[];\n                let data = result.data.data;\n\t\t\t\tdata.map(function(row){\n                    let id_value = getRowID(row);                 \n                    parsed_select_options.push({value: id_value, label: id_value});\n                    parsed_data.push(createData(row));\n\t\t\t\t})\n\t\t\t\tsetDataAsked(true);\n                setData(parsed_data);\n                setSelectOptions(parsed_select_options);\n                setSeleccionadosValues(parsed_select_options.slice(0,2));       \n\n\t\t\t});\n\t\t}\n\t},[filterDates,grouped]);\n\n    return (\n        <div>\n            <Filter dates={filterDates} grouped={grouped} onFiltered={ {from: onFilteredHanlderDesde, hasta: onFilteredHanlderHasta,grouped: onFilteredGrouped} }/>   \n            <Selects options={selectOptions} default={seleccionadosValues} onChange={onSelectChange} />\n            <Chart mediciones={getData()} />\n        </div> \n        \n    );\n}\nexport default TheChart;","import React,{useState,useEffect} from \"react\";\nimport { Button, Avatar} from \"@material-ui/core\";\nimport axios from 'axios';\n\n\n\nconst CurrentWeather = (props) => {\n\n  const [currentWeather,setCurrentWeather] = useState(\"\");\n  const [currentWeatherIcon,setCurrentWeatherIcon] = useState(\"\");\n\n  useEffect(() => {\n    // SETEO DEL DIA DE  HOY \n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    var hora = today.getHours();\n    today =  yyyy  + '-' + mm + '-' + dd;\n    // API KEY\n    var key = 'fc56ef3290d74b4a9a2235728201608';\n    \n    axios.get( 'http://api.weatherapi.com/v1/history.json?key='+ key +'&q=-34.874408,-58.083395&dt='+today,\n\n    ).then(function(result){      \n      // SETEO DE ICONO Y VALORES METEORILOGICOS DEL DIA\n      let info = result.data.forecast.forecastday[0].day\n      let actual = result.data.forecast.forecastday[0].hour[hora];\n      setCurrentWeatherIcon(actual.condition.icon)\n      setCurrentWeather(\"Max: \" + info.maxtemp_c + \"°  |  Min: \" + info.mintemp_c +\n             \"°  |  Ahora: \" + actual.temp_c + \"°  |  Nubosidad: \" + actual.cloud +\"%\")\n             \n    })\n    .catch(function(){\n      setCurrentWeather(\" Meteorologia no disponible \")\n      setCurrentWeatherIcon(\"./soloo.png\")\n    });\n  });\n\n  return (  <div>\n            <Button >\n              <Avatar src={currentWeatherIcon} style={{height:'90%',width:'90%'}}/>\n            </Button>\n            <Button >\n            {currentWeather}\n            </Button>\n            </div>\n\n\n  );\n};\n\nexport default CurrentWeather;","import React from \"react\";\nimport { Button} from \"@material-ui/core\";\nimport { FilePicker } from 'react-file-picker-preview';\nimport { useAlert } from 'react-alert'\nimport axios from 'axios';\n\nconst SendFileButton = (props) => {\n\n    const alert = useAlert();\n\n    const sendFileHandler = (file) =>{\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios.post( 'http://localhost:5000/cargarDatos',\n          formData,\n          {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n          }\n        ).then(function(result){\n            let total = result.data.cargados + result.data.fallidos\n            alert.show( result.data.cargados + \" de \" + total +\" cargados exitosamente! \");\n        })\n        .catch(function(){\n            alert.show('Fallo la conexion con el servidor!')\n        });\n    \n    }\n\n    return (<FilePicker\n                className=\"button\"\n                extensions={['text/csv']}\n                onChange={(file) => sendFileHandler(file)}\n                onError={error => { alert.show('El archivo debe ser de tipo CSV') }}\n            >\n                <Button color=\"inherit\" className={props.style}> Cargar </Button>\n            </FilePicker>\n    );\n};\n\nexport default SendFileButton;","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport CurrentWeather from './CurrentWeather';\nimport SendFileButton from './SendFileButton';\nimport { Grid, Button, AppBar, Toolbar} from \"@material-ui/core\";\n\nconst styles = theme =>({\n\n  row:{\n    flexGrow:1\n  },\n  grow:{\n    flexGrow:1,\n  },\n  container:{\n    width:'70%',\n    margin:\"auto\"\n  },\n  buttonFontSize:{\n    fontSize:\"15px\",\n    color:\"#a1a1a1\",\n    padding: \" 10px 30px\"\n  },\n\n  AppBar:{\n    backgroundColor:\"#fff\",\n    backgroundSize:\"cover\"\n  },\n  mainLogo:{\n    color: \"#a1a1a1\",\n    justifyContent:\"left\",\n    '&:hover':{\n      background:\"transparent\"\n    }\n  },\n\n  avatar:{\n    height:\"100%\",\n    borderRadius:0,\n  },\n  root:{\n    paddingBottom: \"30px\"\n  },\n\n  loginButton:{\n    background:\"#389393\",\n    marginLeft: '20px',\n    color:\"#fff\",\n    marginTop: \"15px\",\n    borderRadius:\"25px\",\n    padding:\"10px 30px\",    \n\n    '&:hover':{\n      background: '#db6400',\n      boxShadow: \"0px 2px 10px #888888\"\n    }\n  }\n\n});\n\n@withStyles(styles)\n\nclass Navbar extends React.Component{\n\n  render(){\n\n    const {classes} = this.props;\n\n    return(\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\" className={classes.AppBar}>\n          <Grid item sm={12} xs={12} className={classes.container}>\n            <Toolbar>\n              <Grid className={classes.grow}>\n                <CurrentWeather/>\n              </Grid>\n              <Button color=\"inherit\" component={Link} to=\"/historico\" className={classes.buttonFontSize}>Historico</Button>\n              <Button color=\"inherit\" component={Link} to=\"/listado\" className={classes.buttonFontSize}>Listado</Button>\n              <Button color=\"inherit\" component={Link} to=\"/grafico\" className={classes.buttonFontSize}>Grafico</Button>\n              <SendFileButton style={classes.loginButton}/>            \n            </Toolbar>\n          </Grid>\n        </AppBar>\n      </div>\n      \n    )\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport cx from 'classnames';\nimport CountUp from \"react-countup\";\n\nconst SelfCard = (props) => {\n  return (\n        <Grid item component={Card} xs={8} md={3} className={cx(styles.card, props.style)}>\n            <CardContent>\n                <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>{props.title}</Typography>\n                <Typography variant=\"h4\">\n                <CountUp start={0} end={props.data} duration={2} decimals={2} />\n                </Typography>\n                <Typography  variant=\"h5\" color=\"textSecondary\">{props.date}</Typography>\n            </CardContent>\n        </Grid>\n  );\n};\n\nexport default SelfCard;\n","import React,{useState,useEffect} from \"react\";\nimport { Grid,ButtonGroup,Button } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport SelfCard from \"./SelfCard.jsx\";\nimport axios from 'axios';\n\nconst Cards = (props) => {\n\n\tconst [data, setData] = useState({ data: null});\n\tconst [dataGroupedBy, setDataGroupedBy] = useState(\"dia\");\n  \tconst [disabledButtons, setDisabledButtons] = useState({ mes: false,dia: true,hora: false});\n\n\tconst onButtonClick = (wich) => {\n\t\tlet data;\t\t\n\t\tswitch (wich) {\n\t\t\tcase 'mes' :\tdata = { mes: true,dia: false,hora: false};break;\n\t\t\tcase 'dia' :\tdata = { mes: false,dia: true,hora: false};break;\n\t\t\tcase 'hora':\tdata = { mes: false,dia: false,hora: true};break;\n\t\t\tdefault    :\tdata = { mes: false,dia: true,hora: false};break;\n\t\t};\n\t\tsetDisabledButtons(data);\n\t\tsetDataGroupedBy(wich);\t\n\t\tsetData({ data: null});\t\n\t\t\n  \t}\n \n  \tuseEffect(() => {\n  \n\t\tif( data.data === null){\n\t\t\taxios.get( 'http://localhost:5000/historicos', {\n\t\t\t\tparams: {\n\t\t\t\t\tdataGroupedBy: dataGroupedBy\n\t\t\t\t}\n\t\t\t  })\n\t\t\t.then(function(result){      \n\t\t\t\tconsole.log(result.data.data[0].VALOR);\n\t\t\t\tsetData(result.data.data)\n\t\t\n\t\t\t});\n\t\t}\n\t});\n\t\n\tif( data.data === null){\treturn (<div className={styles.container}></div>);}\n  \treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t  <ButtonGroup className={styles.buttonGroup} size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n\t\t\t\t<Button onClick={() => onButtonClick('mes')} disabled={disabledButtons.mes}>Mensual</Button>\n\t\t\t\t<Button onClick={() => onButtonClick('dia')} disabled={disabledButtons.dia} >Diario</Button>\n\t\t\t\t<Button onClick={() => onButtonClick('hora')} disabled={disabledButtons.hora} >Horario</Button>\n\t\t\t  </ButtonGroup>\n\t\t\t  <Grid container spacing={6} justify=\"center\">        \n\t\t\t\t<SelfCard\n\t\t\t\t\tdata={data[0].VALOR}\n\t\t\t\t\tdate={data[0].CLAVE}\n\t\t\t\t\tstyle={styles.carga}\n\t\t\t\t\ttitle={\"Carga(Kv)\"}\n\t\t\t\t/>\n\t\t\t\t<SelfCard\n\t\t\t\t\tdata={data[1].VALOR}\n\t\t\t\t\tdate={data[1].CLAVE}\n\t\t\t\t\tstyle={styles.descarga}\n\t\t\t\t\ttitle={\"Descarga(Kv)\"}\n\t\t\t\t/>\n\t\t\t\t<SelfCard\n\t\t\t\t\tdata={data[2].VALOR}\n\t\t\t\t\tdate={data[2].CLAVE}\n\t\t\t\t\tstyle={styles.usoPropio}\n\t\t\t\t\ttitle={\"Uso propio(Kv)\"}\n\t\t\t\t/>\n\t\t\t\t<SelfCard\n\t\t\t\t\tdata={data[4].VALOR}\n\t\t\t\t\tdate={data[4].CLAVE}\n\t\t\t\t\tstyle={styles.nubosidad}\n\t\t\t\t\ttitle={\"Potencia inversor(Kv)\"}\n\t\t\t\t/>\n\t\t\t\t<SelfCard\n\t\t\t\t\tdata={data[5].VALOR}\n\t\t\t\t\tdate={data[5].CLAVE}\n\t\t\t\t\tstyle={styles.temperatura}\n\t\t\t\t\ttitle={\"Voltaje panel(Kv)\"}\n\t\t\t\t/>\n\t\t\t\t<SelfCard\n\t\t\t\t\tdata={data[3].VALOR}\n\t\t\t\t\tdate={data[3].CLAVE}\n\t\t\t\t\tstyle={styles.pv}\n\t\t\t\t\ttitle={\"Pv(Kv)\"}\n\t\t\t\t/>\n\t\t\t  </Grid>\n\t\t\t</div>\n\t\t  );\n};\n\nexport default Cards;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {TableSortLabel,TableBody,TableCell,TableHead,TableContainer,TablePagination,TableRow,Table} from '@material-ui/core';\nimport {Checkbox,IconButton,Tooltip,Paper,Typography,Toolbar} from '@material-ui/core';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'fecha', numeric: true, disablePadding: true, label: 'FECHA' },\n  { id: 'hora', numeric: true, disablePadding: true, label: 'HORA' },\n  { id: 'carga', numeric: true, disablePadding: false, label: 'CARGA (Kv)' },\n  { id: 'descarga', numeric: true, disablePadding: false, label: 'DESCARGA (Kv)' },\n  { id: 'usoPropio', numeric: true, disablePadding: false, label: 'USO PROPIO (Kv)' },\n  { id: 'pv', numeric: true, disablePadding: false, label: 'PV (Kv)' },\n  { id: 'pGrid', numeric: true, disablePadding: false, label: 'P EXT (Kv)' },\n  { id: 'pInverter', numeric: true, disablePadding: false, label: 'P INV (Kv)' },\n  { id: 'pVoltaje', numeric: true, disablePadding: false, label: 'P VOLTAJE (Kv)' },\n  { id: 'nubosidad', numeric: true, disablePadding: false, label: 'NUBOSIDAD (%)' },\n  { id: 'temperatura', numeric: true, disablePadding: false, label: 'TEMPERATURA (C°)' }\n\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Mediciones\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst List = (props) => {\n\tconst classes = useStyles();\n\tconst [order, setOrder] = useState('asc');\n\tconst [orderBy, setOrderBy] = useState('fecha');\n\tconst [selected, setSelected] = useState([]);\n\tconst [page, setPage] = useState(0);\n\tconst [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      \n      const newSelecteds = props.mediciones.map((n) => n.index);\n\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={ 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.mediciones.length}\n            />\n            <TableBody>\n              {stableSort(props.mediciones, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  \n                  const isItemSelected = isSelected(index);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, index)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={index}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\">{row.fecha}</TableCell>\n                      <TableCell align=\"center\">{row.hora}</TableCell>\n                      <TableCell align=\"center\">{row.carga}</TableCell>\n                      <TableCell align=\"center\">{row.descarga}</TableCell>\n                      <TableCell align=\"center\">{row.carga}</TableCell>\n                      <TableCell align=\"center\">{row.pv}</TableCell>\n                      <TableCell align=\"center\">{row.p_grid}</TableCell>\n                      <TableCell align=\"center\">{row.p_inversor}</TableCell>\n                      <TableCell align=\"center\">{row.pv_voltage}</TableCell>\n                      <TableCell align=\"center\">{row.nubosidad}</TableCell>\n                      <TableCell align=\"center\">{row.temperatura}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={props.mediciones.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default List;\n","import React,{useEffect} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nexport default function Table(props){\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableSelectCell:{\n        root: {\n          backgroundColor: 'whitesmoke',\n        },\n        headerCell:{\n          backgroundColor:\"gainsboro\"\n        }\n      },\n      MUIDataTableHeadCell:{\n        root:{\n          backgroundColor:\"gainsboro\",\n        },\n        fixedHeader:{\n          backgroundColor:\"gainsboro\",\n        }\n      },\n      MUIDataTableToolbar:{\n        root:{\n          backgroundColor:\"#389393\"\n        },\n        icon:{\n          color:\"white\"\n        },\n        titleText:{\n          color:\"white\",\n          fontFamily:\"Roboto Slab\"\n        }\n      }\n    }\n  })\n\n  const columnas = [\n    {   \n        name: \"ID\",\n        options: {\n          display:false,\n          sort:false,\n          numeric:true\n        }\n      },\n    { \n      name: \"FECHA\",\n      options: {\n        display:true,\n        sort:true\n      }\n    },\n    { \n      name: \"HORA\",\n      options: {\n        display:true,\n        sort:true\n      }\n    },\n    { \n        name: \"CARGA(Kv)\",\n        options: {\n          display:true,\n          sort:true,\n          numeric:true\n        }\n      },\n    { \n      name: \"DESCARGA(Kv)\",\n      options: {\n        display:true,\n        sort:true\n      }\n    },\n    { \n        name: \"USO PROPIO(Kv)\",\n        options: {\n          display:true,\n          sort:true\n        }\n    },\n    { \n        name: \"PV(Kv)\",\n        options: {\n          display:true,\n          sort:true\n        }\n    },\n    { \n        name: \"P EXT(Kv)\",\n        options: {\n            display:true,\n            sort:true\n        }\n    },\n    { \n        name: \"P INV(Kv)\",\n        options: {\n          display:true,\n          sort:true\n        }\n    },\n    { \n        name: \"P VOLTAJE (Kv)\",\n        options: {\n            display:true,\n            sort:true,\n            numeric:true\n        }\n    },\n    { \n        name: \"NUBOSIDAD(%)\",\n        options: {\n          display:true,\n          sort:true\n        }\n    },\n    { \n        name: \"TEMPERATURA(Cº)\",\n        options: {\n            display:true,\n            sort:true\n        }\n    }\n  \n  ];\n\n  const options = {\n    filterType: \"dropdown\",\n    print: false,\n    filter: true,\n    selectableRows: 'multiple',\n    responsive: \"scroll\",\n    onRowsDelete:false ,\n    selectToolbarPlacement: \"replace\",\n    textLabels: {\n      body: {\n        noMatch: \"No se encontraron registros\",\n        toolTip: \"Orden\",\n        columnHeaderTooltip: column => `Ordenado por ${column.label}`\n      },\n      pagination: {\n        next: \"Pagina siguiente\",\n        previous: \"Pagina anterior\",\n        rowsPerPage: \"Mostrando:\",\n        displayRows: \"de\",\n      },\n      filter: {\n        all: \"Todos\",\n        title: \"Filtros\",\n        reset: \"Reiniciar\",\n      },\n      viewColumns: {\n        title: \"Mostrar columnas\",\n        titleAria: \"Mostrar/Ocultar columnas de la tabla\",\n      },\n      selectedRows: {\n        text: \"Fila/s seleccionadas\",\n        delete: \"Borrar\",\n        deleteAria: \"Borrar fila/s seleccionadas\",\n      }\n    }\n  }\n\n  const getData = () => {\n    let data = [];\n    data = props.datos.map( el =>\n        [data.length,el.fecha,el.hora, el.carga,el.descarga,el.uso_propio,\n        el.pv,el.p_grid,el.p_inversor,parseFloat(el.pv_voltage),el.nubosidad,el.temperatura]\n        );\n    console.log(data);\n    return data;  \n    }\n\nreturn(\n  <MuiThemeProvider theme={getMuiTheme()}>  \n    <MUIDataTable\n      title={\"Mediciones\"}\n      data={getData()}\n      columns={columnas}\n      options={options}\n\n  />\n  </MuiThemeProvider>\n\n)}\n","import React,{useEffect,useState} from \"react\";\n\nimport List from \"./List\";\nimport Table from \"./Table\";\nimport Filter from \"./Filter\";\n\nimport axios from 'axios';\n\n\nfunction createData(row) {\n    return { fecha: row.FECHA , carga : row.CARGA, descarga : row.DESCARGA, pv : row.PV, hora : row.HORA,\n             nubosidad : row.NUBOSIDAD, temperatura : row.TEMPERATURA, pv_voltage : row.PV_VOLTAGE, uso_propio : row.USO_PROPIO,\n             p_inversor : row.P_INVERSOR, p_grid : row.P_GRID\n            };\n}\n\nfunction pastMonth(){\n    var date = new Date();\n    date.setDate(date.getDate() - 60);\n    return date;\n}\n\nfunction convertDate(date){\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = date.getFullYear();\n\n    date = dd + '/' + mm + '/' + yyyy;\n    return date;\n}\n\nconst Listado = (props) => {\n\n\tconst [data, setData] = useState([]);\n    const [dataAsked, setDataAsked] = useState(false);\n    const [grouped, setGrouped] = useState('no');\n    const [filterDates, setFilterDates] = useState({ from: pastMonth()   ,hasta : new Date()});\n\n    const onFilteredHanlderDesde = (date) => {\n        setFilterDates({...filterDates,['from']: date });\n        setDataAsked(false);\n    }\n\n    const onFilteredHanlderHasta = (date) => {\n        \n        setFilterDates({...filterDates,['hasta']: date });\n        setDataAsked(false);\n    }\n\n    const onFilteredGrouped = (event) => {\n        setGrouped(event.target.value);   \n        setDataAsked(false);\n    }\n\n    const fetchData = () => {\n        let desde = convertDate(filterDates.from);\n        let hasta = convertDate(filterDates.hasta);\n                \n        axios.get( 'http://localhost:5000/mediciones', {\n            params: {\n                dataGroupedBy: grouped,\n                desde : desde,\n                hasta : hasta,\n            }\n            })\n            .then(function(result){\n                let parsed_data =[]\n                result.data.data.map(function(row){\n                    parsed_data.push(createData(row))\n                })\n                setData(parsed_data);\n    \n            });\n    }\n\n    useEffect(() => {\n\t\tif( !dataAsked){\n            \n            let desde = convertDate(filterDates.from);\n            let hasta = convertDate(filterDates.hasta);\n            \n\t\t\taxios.get( 'http://localhost:5000/mediciones', {\n\t\t\t\tparams: {\n                    dataGroupedBy: grouped,\n                    desde : desde,\n                    hasta : hasta,\n                }\n            })\n\t\t\t.then(function(result){\n\t\t\t\tlet parsed_data =[]\n\t\t\t\tresult.data.data.map(function(row){\n\t\t\t\t\tparsed_data.push(createData(row))\n\t\t\t\t})\n\t\t\t\tsetDataAsked(true);\n\t\t\t\tsetData(parsed_data);\n\n\t\t\t});\n\t\t}\n\t});\n\n    return (\n        <div>\n            <Filter dates={filterDates} grouped={grouped} onFiltered={ {from: onFilteredHanlderDesde, hasta: onFilteredHanlderHasta,grouped: onFilteredGrouped} }/>   \n            {/* <List mediciones={data}/> */}\n            <Table datos={data} ></Table>\n        </div> \n        \n    );\n}\nexport default Listado;","import React from \"react\";\nimport { Chart, Cards, Navbar } from \"./components\";\nimport Listado from \"./components/List/Listado\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\nrender(){\n  return ( \n    <Router> \n        <Navbar />\n        <div style={{paddingRight:25,paddingLeft:25}}>\n          <Switch >\n            <Route path=\"/listado\">\n              <Listado/>\n            </Route>\n            <Route path=\"/historico\">\n              <Cards />\n            </Route>\n            <Route path=\"/grafico\">\n              <Chart />\n            </Route>\n            <Route path=\"/\">\n              <Chart />\n            </Route>\n          </Switch>\n        </div>        \n    </Router>\n  );\n}\n}export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: '80px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}